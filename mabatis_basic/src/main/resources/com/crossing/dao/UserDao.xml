<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.crossing.dao.UserDao">

    <!--配置查询所有-->
     <select id="findAll" resultType="user">
         select * from user
     </select>


    <!--保存用户-->
    <insert id="saveUser" parameterType="user">
        <!-- 配置插入操作后，获取插入数据的id -->
        <selectKey keyProperty="id" keyColumn="id" resultType="Integer" order="AFTER">
            select last_insert_id()
        </selectKey>
      insert into user(username, birthday, sex, address) value (#{username}, #{birthday}, #{sex}, #{address})
    </insert>

    <!--更新用户-->
    <update id="updateUser" parameterType="user">
        update user set username=#{username}, address=#{address}, sex=#{sex}, birthday=#{birthday} where id=#{id}
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id= #{uid}
    </delete>

    <!--根据uid返回用户数据-->
    <select id="findOneUser" parameterType="Integer" resultType="user">
        select * from user where id = #{uid}
    </select>

    <!--根据名称模糊查询数据-->
    <select id="findByName" parameterType="string" resultType="user">
        <!--select * from user where username like #{name}-->
        select * from user where username like '%${value}%'

    </select>

    <!--查询获取数据总条数-->
    <select id="findTotal" resultType="Integer">
        select count(id) from user
    </select>


    <!-- 根据queryVo的条件查询用户 -->
    <select id="findUserByVo" parameterType="com.crossing.domain.QueryVo" resultType="user">
        select * from user where username like #{user.username}
    </select>

    <!--根据条件查询
    <select id="findByCondition" parameterType="user" resultType="user">
        select * from user where 1=1
        <if test="username != null ">
           and  username=#{username}
        </if>

        <if test="sex != null">
          and sex = #{sex}
        </if>
    </select>-->
    <select id="findByCondition" parameterType="user" resultType="user">
        select * from user
        <where>
            <if test="username != null ">
                and  username=#{username}
            </if>

            <if test="sex != null">
                and sex = #{sex}
            </if>
        </where>
    </select>

    <!--根据queryvo中的Id集合实现查询用户列表-->
    <select id="findUsersInIds" resultType="user" parameterType="queryvo">
        select * from user
        <where>
            <if test="ids != null and ids.size >0">
                <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>
</mapper>